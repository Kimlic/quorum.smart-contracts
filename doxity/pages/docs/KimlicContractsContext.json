{"author":"Bohdan Grytsenko\r","title":"Services discovery contract\r","fileName":"\\contracts\\KimlicContractsContext.sol","name":"KimlicContractsContext","abi":[{"constant":false,"inputs":[{"name":"accountStorageAdapterAddress","type":"address"}],"name":"setAccountStorageAdapter","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"attestationPartyStorageAddress","type":"address"}],"name":"setAttestationPartyStorage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getCommunityTokenWalletAddress","outputs":[{"name":"communityTokenWalletAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getKimlicWalletAddress","outputs":[{"name":"kimlicWalletAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getRelyingPartyStorageAdapter","outputs":[{"name":"relyingPartyStorageAdapter","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getAccountStorageAdapter","outputs":[{"name":"accountStorageAdapter","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getAttestationPartyStorageAdapter","outputs":[{"name":"attestationPartyStorageAdapter","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getVerificationContractFactory","outputs":[{"name":"verificationContractFactory","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getAccountStorage","outputs":[{"name":"accountStorage","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getRelyingPartyStorage","outputs":[{"name":"relyingPartyStorage","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"rewardingContractAddress","type":"address"}],"name":"setRewardingContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"relyingPartyStorageAdapterAddress","type":"address"}],"name":"setRelyingPartyStorageAdapter","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"kimlicTokenAddress","type":"address"}],"name":"setKimlicToken","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getKimlicToken","outputs":[{"name":"kimlicToken","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"relyingPartyStorageAddress","type":"address"}],"name":"setRelyingPartyStorage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"verificationContractFactoryAddress","type":"address"}],"name":"setVerificationContractFactory","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getAttestationPartyStorage","outputs":[{"name":"attestationPartyStorage","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"attestationPartyStorageAdapterAddress","type":"address"}],"name":"setAttestationPartyStorageAdapter","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"accountStorageAddress","type":"address"}],"name":"setAccountStorage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getProvisioningContractFactory","outputs":[{"name":"provisioningContractFactory","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getVerificationPriceList","outputs":[{"name":"verificationPriceList","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getRewardingContract","outputs":[{"name":"rewardingContract","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"kimlicWalletAddress","type":"address"}],"name":"setKimlicWalletAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"communityTokenWalletAddressAddress","type":"address"}],"name":"setCommunityTokenWalletAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"verificationPriceListAddress","type":"address"}],"name":"setVerificationPriceList","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"provisioningPriceListAddress","type":"address"}],"name":"setProvisioningPriceList","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"provisioningContractFactoryAddress","type":"address"}],"name":"setProvisioningContractFactory","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getProvisioningPriceList","outputs":[{"name":"provisioningPriceList","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"storageAddress","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"source":"pragma solidity ^0.4.23;\r\n\r\n\r\nimport \"./KimlicContextStorage.sol\";\r\nimport \"./openzeppelin-solidity/Ownable.sol\";\r\nimport \"./AccountStorage.sol\";\r\nimport \"./AccountStorageAdapter.sol\";\r\nimport \"./KimlicToken.sol\";\r\nimport \"./PriceList.sol\";\r\nimport \"./ProvisioningContractFactory.sol\";\r\nimport \"./VerificationContractFactory.sol\";\r\nimport \"./BaseStorage.sol\";\r\nimport \"./RewardingContract.sol\";\r\nimport \"./RelyingPartyStorageAdapter.sol\";\r\nimport \"./RelyingPartyStorage.sol\";\r\nimport \"./AttestationPartyStorageAdapter.sol\";\r\nimport \"./AttestationPartyStorage.sol\";\r\n\r\n/// @title Services discovery contract\r\n/// @author Bohdan Grytsenko\r\n/// @notice Used during deployment to store addresses of other contracts, during runtime - single point where platform member can get address of any contract he needs\r\ncontract KimlicContractsContext is Ownable {\r\n    \r\n    /// public attributes ///\r\n\r\n    /// private attributes ///\r\n    bytes32 private accountStorageAdapterKey;\r\n    bytes32 private kimlicTokenKey;\r\n    bytes32 private verificationContractFactoryKey;\r\n    bytes32 private provisioningPriceKey;\r\n    bytes32 private verificationPriceListKey;\r\n    bytes32 private provisioningContractFactoryKey;\r\n    bytes32 private communityTokenWalletAddressKey;\r\n    bytes32 private rewardingContractKey;\r\n    bytes32 private accountStorageKey;\r\n    bytes32 private relyingPartyStorageAdapterKey;\r\n    bytes32 private relyingPartyStorageKey;\r\n    bytes32 private attestationPartyStorageAdapterKey;\r\n    bytes32 private attestationPartyStorageKey;\r\n    bytes32 private kimlicWalletAddressKey;\r\n    KimlicContextStorage internal _storage;\r\n\r\n    /// constructors ///\r\n    constructor(address storageAddress) public Ownable() {\r\n        _storage = KimlicContextStorage(storageAddress);\r\n\r\n        accountStorageAdapterKey = keccak256(abi.encode(\"accountStorageAdapter\"));\r\n        kimlicTokenKey = keccak256(abi.encode(\"kimlicToken\"));\r\n        verificationContractFactoryKey = keccak256(abi.encode(\"verificationContractFactory\"));\r\n        provisioningPriceKey = keccak256(abi.encode(\"provisioningPrice\"));\r\n        verificationPriceListKey = keccak256(abi.encode(\"verificationPriceList\"));\r\n        provisioningContractFactoryKey = keccak256(abi.encode(\"provisioningContractFactory\"));\r\n        communityTokenWalletAddressKey = keccak256(abi.encode(\"communityTokenWalletAddress\"));\r\n        rewardingContractKey = keccak256(abi.encode(\"rewardingContract\"));\r\n        accountStorageKey = keccak256(abi.encode(\"accountStorage\"));\r\n        relyingPartyStorageAdapterKey = keccak256(abi.encode(\"relyingPartyStorageAdapter\"));\r\n        relyingPartyStorageKey = keccak256(abi.encode(\"relyingPartyStorage\"));\r\n        attestationPartyStorageAdapterKey = keccak256(abi.encode(\"attestationPartyStorageAdapter\"));\r\n        attestationPartyStorageKey = keccak256(abi.encode(\"attestationPartyStorage\"));\r\n        kimlicWalletAddressKey = keccak256(abi.encode(\"kimlicWalletAddress\"));\r\n    }\r\n\r\n    /**** Get Methods ***********/\r\n\r\n    /// @notice accessor for AccountStorageAdapter address\r\n    /// @return accountStorageAdapter AccountStorageAdapter address\r\n    function getAccountStorageAdapter() public view returns(AccountStorageAdapter accountStorageAdapter) {\r\n        accountStorageAdapter = AccountStorageAdapter(_storage.getAddress(accountStorageAdapterKey));\r\n    }\r\n\r\n    /// @notice accessor for KimlicToken address\r\n    /// @return kimlicToken KimlicToken address\r\n    function getKimlicToken() public view returns(KimlicToken kimlicToken) {\r\n        kimlicToken = KimlicToken(_storage.getAddress(kimlicTokenKey));\r\n    }\r\n\r\n    /// @notice accessor for VerificationContractFactory address\r\n    /// @return verificationContractFactory VerificationContractFactory address\r\n    function getVerificationContractFactory() public view returns(VerificationContractFactory verificationContractFactory) {\r\n        verificationContractFactory = VerificationContractFactory(_storage.getAddress(verificationContractFactoryKey));\r\n    }\r\n\r\n    /// @notice accessor for PriceList address\r\n    /// @return provisioningPriceList PriceList address\r\n    function getProvisioningPriceList() public view returns(PriceList provisioningPriceList) {\r\n        provisioningPriceList = PriceList(_storage.getAddress(provisioningPriceKey));\r\n    }\r\n\r\n    /// @notice accessor for PriceList address\r\n    /// @return verificationPriceListKey PriceList address\r\n    function getVerificationPriceList() public view returns(PriceList verificationPriceList) {\r\n        verificationPriceList = PriceList(_storage.getAddress(verificationPriceListKey));\r\n    }\r\n\r\n    /// @notice accessor for ProvisioningContractFactory address\r\n    /// @return provisioningContractFactory ProvisioningContractFactory address\r\n    function getProvisioningContractFactory() public view returns(ProvisioningContractFactory provisioningContractFactory) {\r\n        provisioningContractFactory = ProvisioningContractFactory(_storage.getAddress(provisioningContractFactoryKey));\r\n    }\r\n\r\n    /// @notice accessor for CommunityTokenWallet address\r\n    /// @return communityTokenWalletAddress CommunityTokenWallet address\r\n    function getCommunityTokenWalletAddress() public view returns(address communityTokenWalletAddress) {\r\n        communityTokenWalletAddress = _storage.getAddress(communityTokenWalletAddressKey);\r\n    }\r\n\r\n    /// @notice accessor for RewardingContract address\r\n    /// @return rewardingContract RewardingContract address\r\n    function getRewardingContract() public view returns(RewardingContract rewardingContract) {\r\n        rewardingContract = RewardingContract(_storage.getAddress(rewardingContractKey));\r\n    }\r\n\r\n    /// @notice accessor for AccountStorage address\r\n    /// @return accountStorage AccountStorage address\r\n    function getAccountStorage() public view returns(AccountStorage accountStorage) {\r\n        accountStorage = AccountStorage(_storage.getAddress(accountStorageKey));\r\n    }\r\n\r\n    /// @notice accessor for RelyingPartyStorageAdapter address\r\n    /// @return relyingPartyStorageAdapter RelyingPartyStorageAdapter address\r\n    function getRelyingPartyStorageAdapter() public view returns(RelyingPartyStorageAdapter relyingPartyStorageAdapter) {\r\n        relyingPartyStorageAdapter = RelyingPartyStorageAdapter(_storage.getAddress(relyingPartyStorageAdapterKey));\r\n    }\r\n\r\n    /// @notice accessor for RelyingPartyStorage address\r\n    /// @return relyingPartyStorage RelyingPartyStorage address\r\n    function getRelyingPartyStorage() public view returns(RelyingPartyStorage relyingPartyStorage) {\r\n        relyingPartyStorage = RelyingPartyStorage(_storage.getAddress(relyingPartyStorageKey));\r\n    }\r\n\r\n    /// @notice accessor for AttestationPartyStorageAdapter address\r\n    /// @return attestationPartyStorageAdapter AttestationPartyStorageAdapter address\r\n    function getAttestationPartyStorageAdapter() public view returns(AttestationPartyStorageAdapter attestationPartyStorageAdapter) {\r\n        attestationPartyStorageAdapter = AttestationPartyStorageAdapter(_storage.getAddress(attestationPartyStorageAdapterKey));\r\n    }\r\n\r\n    /// @notice accessor for AttestationPartyStorage address\r\n    /// @return attestationPartyStorage AttestationPartyStorage address\r\n    function getAttestationPartyStorage() public view returns(AttestationPartyStorage attestationPartyStorage) {\r\n        attestationPartyStorage = AttestationPartyStorage(_storage.getAddress(attestationPartyStorageKey));\r\n    }\r\n\r\n    /// @notice accessor for KimlicWallet address\r\n    /// @return kimlicWalletAddress KimlicWallet\r\n    function getKimlicWalletAddress() public view returns(address kimlicWalletAddress) {\r\n        kimlicWalletAddress = _storage.getAddress(kimlicWalletAddressKey);\r\n    }\r\n\r\n\r\n    /* Setters */\r\n\r\n    /// @notice modifier for AccountStorageAdapter address\r\n    /// @param accountStorageAdapterAddress AccountStorageAdapter address\r\n    function setAccountStorageAdapter(address accountStorageAdapterAddress) public onlyOwner() {\r\n        _storage.setAddress(accountStorageAdapterKey, accountStorageAdapterAddress);\r\n    }\r\n\r\n    /// @notice modifier for KimlicToken address\r\n    /// @param kimlicTokenAddress KimlicToken address\r\n    function setKimlicToken(address kimlicTokenAddress) public onlyOwner() {\r\n        _storage.setAddress(kimlicTokenKey, kimlicTokenAddress);\r\n    }\r\n\r\n    /// @notice modifier for VerificationContractFactory address\r\n    /// @param verificationContractFactoryAddress VerificationContractFactory address\r\n    function setVerificationContractFactory(address verificationContractFactoryAddress) public onlyOwner() {\r\n        _storage.setAddress(verificationContractFactoryKey, verificationContractFactoryAddress);\r\n    }\r\n\r\n    /// @notice modifier for ProvisioningPriceList address\r\n    /// @param provisioningPriceListAddress ProvisioningPriceList address\r\n    function setProvisioningPriceList(address provisioningPriceListAddress) public onlyOwner() {\r\n        _storage.setAddress(provisioningPriceKey, provisioningPriceListAddress);\r\n    }\r\n\r\n    /// @notice modifier for VerificationPriceList address\r\n    /// @param verificationPriceListAddress VerificationPriceList address\r\n    function setVerificationPriceList(address verificationPriceListAddress) public onlyOwner() {\r\n        _storage.setAddress(verificationPriceListKey, verificationPriceListAddress);\r\n    }\r\n\r\n    /// @notice modifier for ProvisioningContractFactory address\r\n    /// @param provisioningContractFactoryAddress ProvisioningContractFactory address\r\n    function setProvisioningContractFactory(address provisioningContractFactoryAddress) public onlyOwner() {\r\n        _storage.setAddress(provisioningContractFactoryKey, provisioningContractFactoryAddress);\r\n    }\r\n\r\n    /// @notice modifier for CommunityTokenWallet address\r\n    /// @param communityTokenWalletAddressAddress CommunityTokenWallet address\r\n    function setCommunityTokenWalletAddress(address communityTokenWalletAddressAddress) public onlyOwner() {\r\n        _storage.setAddress(communityTokenWalletAddressKey, communityTokenWalletAddressAddress);\r\n    }\r\n\r\n    /// @notice modifier for RewardingContract address\r\n    /// @param rewardingContractAddress RewardingContract address\r\n    function setRewardingContract(address rewardingContractAddress) public onlyOwner() {\r\n        _storage.setAddress(rewardingContractKey, rewardingContractAddress);\r\n    }\r\n\r\n    /// @notice modifier for AccountStorage address\r\n    /// @param accountStorageAddress AccountStorage address\r\n    function setAccountStorage(address accountStorageAddress) public onlyOwner() {\r\n        _storage.setAddress(accountStorageKey, accountStorageAddress);\r\n    }\r\n    \r\n    /// @notice modifier for RelyingPartyStorageAdapter address\r\n    /// @param relyingPartyStorageAdapterAddress RelyingPartyStorageAdapter address\r\n    function setRelyingPartyStorageAdapter(address relyingPartyStorageAdapterAddress) public  onlyOwner() {\r\n        _storage.setAddress(relyingPartyStorageAdapterKey, relyingPartyStorageAdapterAddress);\r\n    }\r\n\r\n    /// @notice modifier for RelyingPartyStorageAdapter address\r\n    /// @param relyingPartyStorageAddress RelyingPartyStorageAdapter address\r\n    function setRelyingPartyStorage(address relyingPartyStorageAddress) public  onlyOwner() {\r\n        _storage.setAddress(relyingPartyStorageKey, relyingPartyStorageAddress);\r\n    }\r\n\r\n    /// @notice modifier for AttestationPartyStorageAdapter address\r\n    /// @param attestationPartyStorageAdapterAddress AttestationPartyStorageAdapter address\r\n    function setAttestationPartyStorageAdapter(address attestationPartyStorageAdapterAddress) public  onlyOwner() {\r\n        _storage.setAddress(attestationPartyStorageAdapterKey, attestationPartyStorageAdapterAddress);\r\n    }\r\n\r\n    /// @notice modifier for AttestationPartyStorage address\r\n    /// @param attestationPartyStorageAddress AttestationPartyStorage address\r\n    function setAttestationPartyStorage(address attestationPartyStorageAddress) public  onlyOwner() {\r\n        _storage.setAddress(attestationPartyStorageKey, attestationPartyStorageAddress);\r\n    }\r\n\r\n    /// @notice modifier for KimlicWallet address\r\n    /// @param kimlicWalletAddress KimlicWallet address\r\n    function setKimlicWalletAddress(address kimlicWalletAddress) public  onlyOwner() {\r\n        _storage.setAddress(kimlicWalletAddressKey, kimlicWalletAddress);\r\n    }\r\n}","abiDocs":[{"constant":false,"inputs":[{"name":"accountStorageAdapterAddress","type":"address","description":"AccountStorageAdapter address\r"}],"name":"setAccountStorageAdapter","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for AccountStorageAdapter address\r","signature":"setAccountStorageAdapter(address)","signatureHash":"070caeb0"},{"constant":false,"inputs":[{"name":"attestationPartyStorageAddress","type":"address","description":"AttestationPartyStorage address\r"}],"name":"setAttestationPartyStorage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for AttestationPartyStorage address\r","signature":"setAttestationPartyStorage(address)","signatureHash":"07249653"},{"constant":true,"inputs":[],"name":"getCommunityTokenWalletAddress","outputs":[{"name":"communityTokenWalletAddress","type":"address","description":"CommunityTokenWallet address\r"}],"payable":false,"stateMutability":"view","type":"function","return":"communityTokenWalletAddress CommunityTokenWallet address\r","notice":"accessor for CommunityTokenWallet address\r","signature":"getCommunityTokenWalletAddress()","signatureHash":"09ccc1db"},{"constant":true,"inputs":[],"name":"getKimlicWalletAddress","outputs":[{"name":"kimlicWalletAddress","type":"address","description":"KimlicWallet\r"}],"payable":false,"stateMutability":"view","type":"function","return":"kimlicWalletAddress KimlicWallet\r","notice":"accessor for KimlicWallet address\r","signature":"getKimlicWalletAddress()","signatureHash":"0a9fcaf0"},{"constant":true,"inputs":[],"name":"getRelyingPartyStorageAdapter","outputs":[{"name":"relyingPartyStorageAdapter","type":"address","description":"RelyingPartyStorageAdapter address\r"}],"payable":false,"stateMutability":"view","type":"function","return":"relyingPartyStorageAdapter RelyingPartyStorageAdapter address\r","notice":"accessor for RelyingPartyStorageAdapter address\r","signature":"getRelyingPartyStorageAdapter()","signatureHash":"0c943729"},{"constant":true,"inputs":[],"name":"getAccountStorageAdapter","outputs":[{"name":"accountStorageAdapter","type":"address","description":"AccountStorageAdapter address\r"}],"payable":false,"stateMutability":"view","type":"function","return":"accountStorageAdapter AccountStorageAdapter address\r","notice":"accessor for AccountStorageAdapter address\r","signature":"getAccountStorageAdapter()","signatureHash":"14c6f21d"},{"constant":true,"inputs":[],"name":"getAttestationPartyStorageAdapter","outputs":[{"name":"attestationPartyStorageAdapter","type":"address","description":"AttestationPartyStorageAdapter address\r"}],"payable":false,"stateMutability":"view","type":"function","return":"attestationPartyStorageAdapter AttestationPartyStorageAdapter address\r","notice":"accessor for AttestationPartyStorageAdapter address\r","signature":"getAttestationPartyStorageAdapter()","signatureHash":"1940d399"},{"constant":true,"inputs":[],"name":"getVerificationContractFactory","outputs":[{"name":"verificationContractFactory","type":"address","description":"VerificationContractFactory address\r"}],"payable":false,"stateMutability":"view","type":"function","return":"verificationContractFactory VerificationContractFactory address\r","notice":"accessor for VerificationContractFactory address\r","signature":"getVerificationContractFactory()","signatureHash":"22d2dd34"},{"constant":true,"inputs":[],"name":"getAccountStorage","outputs":[{"name":"accountStorage","type":"address","description":"AccountStorage address\r"}],"payable":false,"stateMutability":"view","type":"function","return":"accountStorage AccountStorage address\r","notice":"accessor for AccountStorage address\r","signature":"getAccountStorage()","signatureHash":"293b0c4e"},{"constant":true,"inputs":[],"name":"getRelyingPartyStorage","outputs":[{"name":"relyingPartyStorage","type":"address","description":"RelyingPartyStorage address\r"}],"payable":false,"stateMutability":"view","type":"function","return":"relyingPartyStorage RelyingPartyStorage address\r","notice":"accessor for RelyingPartyStorage address\r","signature":"getRelyingPartyStorage()","signatureHash":"294cf9b0"},{"constant":false,"inputs":[{"name":"rewardingContractAddress","type":"address","description":"RewardingContract address\r"}],"name":"setRewardingContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for RewardingContract address\r","signature":"setRewardingContract(address)","signatureHash":"4b2c8464"},{"constant":false,"inputs":[{"name":"relyingPartyStorageAdapterAddress","type":"address","description":"RelyingPartyStorageAdapter address\r"}],"name":"setRelyingPartyStorageAdapter","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for RelyingPartyStorageAdapter address\r","signature":"setRelyingPartyStorageAdapter(address)","signatureHash":"4dac0a43"},{"constant":false,"inputs":[{"name":"kimlicTokenAddress","type":"address","description":"KimlicToken address\r"}],"name":"setKimlicToken","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for KimlicToken address\r","signature":"setKimlicToken(address)","signatureHash":"52380f61"},{"constant":true,"inputs":[],"name":"getKimlicToken","outputs":[{"name":"kimlicToken","type":"address","description":"KimlicToken address\r"}],"payable":false,"stateMutability":"view","type":"function","return":"kimlicToken KimlicToken address\r","notice":"accessor for KimlicToken address\r","signature":"getKimlicToken()","signatureHash":"63badc6e"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Allows the current owner to relinquish control of the contract.\r","signature":"renounceOwnership()","signatureHash":"715018a6"},{"constant":false,"inputs":[{"name":"relyingPartyStorageAddress","type":"address","description":"RelyingPartyStorageAdapter address\r"}],"name":"setRelyingPartyStorage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for RelyingPartyStorageAdapter address\r","signature":"setRelyingPartyStorage(address)","signatureHash":"76b80b3a"},{"constant":true,"inputs":[],"name":"owner","payable":false,"stateMutability":"view","type":"function","signature":"owner()","signatureHash":"8da5cb5b"},{"constant":false,"inputs":[{"name":"verificationContractFactoryAddress","type":"address","description":"VerificationContractFactory address\r"}],"name":"setVerificationContractFactory","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for VerificationContractFactory address\r","signature":"setVerificationContractFactory(address)","signatureHash":"9a69a5b8"},{"constant":true,"inputs":[],"name":"getAttestationPartyStorage","outputs":[{"name":"attestationPartyStorage","type":"address","description":"AttestationPartyStorage address\r"}],"payable":false,"stateMutability":"view","type":"function","return":"attestationPartyStorage AttestationPartyStorage address\r","notice":"accessor for AttestationPartyStorage address\r","signature":"getAttestationPartyStorage()","signatureHash":"ac3f83da"},{"constant":false,"inputs":[{"name":"attestationPartyStorageAdapterAddress","type":"address","description":"AttestationPartyStorageAdapter address\r"}],"name":"setAttestationPartyStorageAdapter","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for AttestationPartyStorageAdapter address\r","signature":"setAttestationPartyStorageAdapter(address)","signatureHash":"b1b97f2d"},{"constant":false,"inputs":[{"name":"accountStorageAddress","type":"address","description":"AccountStorage address\r"}],"name":"setAccountStorage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for AccountStorage address\r","signature":"setAccountStorage(address)","signatureHash":"b583127d"},{"constant":true,"inputs":[],"name":"getProvisioningContractFactory","outputs":[{"name":"provisioningContractFactory","type":"address","description":"ProvisioningContractFactory address\r"}],"payable":false,"stateMutability":"view","type":"function","return":"provisioningContractFactory ProvisioningContractFactory address\r","notice":"accessor for ProvisioningContractFactory address\r","signature":"getProvisioningContractFactory()","signatureHash":"b819723a"},{"constant":true,"inputs":[],"name":"getVerificationPriceList","outputs":[{"name":"verificationPriceList","type":"address"}],"payable":false,"stateMutability":"view","type":"function","return":"verificationPriceListKey PriceList address\r","notice":"accessor for PriceList address\r","signature":"getVerificationPriceList()","signatureHash":"bc50fe24"},{"constant":true,"inputs":[],"name":"getRewardingContract","outputs":[{"name":"rewardingContract","type":"address","description":"RewardingContract address\r"}],"payable":false,"stateMutability":"view","type":"function","return":"rewardingContract RewardingContract address\r","notice":"accessor for RewardingContract address\r","signature":"getRewardingContract()","signatureHash":"beb83712"},{"constant":false,"inputs":[{"name":"kimlicWalletAddress","type":"address","description":"KimlicWallet address\r"}],"name":"setKimlicWalletAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for KimlicWallet address\r","signature":"setKimlicWalletAddress(address)","signatureHash":"c429f176"},{"constant":false,"inputs":[{"name":"communityTokenWalletAddressAddress","type":"address","description":"CommunityTokenWallet address\r"}],"name":"setCommunityTokenWalletAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for CommunityTokenWallet address\r","signature":"setCommunityTokenWalletAddress(address)","signatureHash":"cba8e0d2"},{"constant":false,"inputs":[{"name":"verificationPriceListAddress","type":"address","description":"VerificationPriceList address\r"}],"name":"setVerificationPriceList","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for VerificationPriceList address\r","signature":"setVerificationPriceList(address)","signatureHash":"e3c2fb79"},{"constant":false,"inputs":[{"name":"provisioningPriceListAddress","type":"address","description":"ProvisioningPriceList address\r"}],"name":"setProvisioningPriceList","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for ProvisioningPriceList address\r","signature":"setProvisioningPriceList(address)","signatureHash":"e400fba1"},{"constant":false,"inputs":[{"name":"provisioningContractFactoryAddress","type":"address","description":"ProvisioningContractFactory address\r"}],"name":"setProvisioningContractFactory","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for ProvisioningContractFactory address\r","signature":"setProvisioningContractFactory(address)","signatureHash":"f1cba9df"},{"constant":false,"inputs":[{"name":"newOwner","type":"address","description":"The address to transfer ownership to.\r"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Allows the current owner to transfer control of the contract to a newOwner.\r","signature":"transferOwnership(address)","signatureHash":"f2fde38b"},{"constant":true,"inputs":[],"name":"getProvisioningPriceList","outputs":[{"name":"provisioningPriceList","type":"address","description":"PriceList address\r"}],"payable":false,"stateMutability":"view","type":"function","return":"provisioningPriceList PriceList address\r","notice":"accessor for PriceList address\r","signature":"getProvisioningPriceList()","signatureHash":"f777550c"},{"inputs":[{"name":"storageAddress","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event","signature":"OwnershipRenounced(address)","signatureHash":"f8df3114"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event","signature":"OwnershipTransferred(address,address)","signatureHash":"8be0079c"}]}
