{"fileName":"\\contracts\\BaseVerification.sol","name":"BaseVerification","abi":[{"constant":true,"inputs":[],"name":"tokensUnlockAt","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_status","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"accountAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"verificationResult","type":"bool"}],"name":"finalizeVerification","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getData","outputs":[{"name":"data","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"verifiedAt","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getStatusName","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"accountFieldName","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"coOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"dataIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardAmount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"contextStorage","type":"address"},{"name":"reward","type":"uint256"},{"name":"account","type":"address"},{"name":"coOwnerAddress","type":"address"},{"name":"index","type":"uint256"},{"name":"fieldName","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"source":"pragma solidity ^0.4.23;\r\n\r\n\r\nimport \"./openzeppelin-solidity/Ownable.sol\";\r\nimport \"./KimlicContractsContext.sol\";\r\nimport \"./AccountStorageAdapter.sol\";\r\nimport \"./WithKimlicContext.sol\";\r\nimport \"./KimlicToken.sol\";\r\n\r\ncontract BaseVerification is Ownable, WithKimlicContext {\r\n    /// public attributes ///\r\n    string public accountFieldName;\r\n    address public coOwner;\r\n    uint public dataIndex;\r\n    address public accountAddress;\r\n    uint public tokensUnlockAt;\r\n    uint public verifiedAt;\r\n    uint public rewardAmount;\r\n    \r\n    /// enums ///\r\n    enum Status { None, Created, Verified, Unverified, Canceled }\r\n\r\n    /// private attributes ///\r\n    Status public _status;\r\n\r\n    /// constructors ///\r\n    constructor(address contextStorage, uint reward, address account, address coOwnerAddress, uint index, string fieldName)\r\n        public WithKimlicContext(contextStorage) Ownable() {\r\n\r\n        coOwner = coOwnerAddress;\r\n        accountAddress = account;\r\n        dataIndex = index;\r\n        accountFieldName = fieldName;\r\n        rewardAmount = reward;\r\n        _status = Status.Created;\r\n    }\r\n\r\n    /// public methods ///\r\n    function finalizeVerification(bool verificationResult) public onlyOwner() {\r\n        require(_status == Status.Created);\r\n\r\n        KimlicContractsContext context = getContext();\r\n        KimlicToken token = context.getKimlicToken();\r\n        require(token.balanceOf(address(this)) == rewardAmount);\r\n\r\n        token.transfer(owner, rewardAmount);\r\n\r\n        _status = verificationResult? Status.Verified: Status.Unverified;\r\n        verifiedAt = block.timestamp;\r\n\r\n        if (verificationResult == true) {\r\n            context.getRewardingContract().checkMilestones(accountAddress, accountFieldName);\r\n        }\r\n    }\r\n\r\n    function getData() view public onlyOwner() returns (string data) {\r\n        return getContext().getAccountStorageAdapter().getFieldMainData(accountAddress, accountFieldName, dataIndex);\r\n    }\r\n\r\n    function withdraw() public onlyOwner() {\r\n        require(block.timestamp >= tokensUnlockAt && _status == Status.Created);\r\n        KimlicContractsContext context = getContext();\r\n\r\n        _status = Status.Canceled;\r\n        KimlicToken kimlicToken = getContext().getKimlicToken();\r\n        kimlicToken.transfer(owner, kimlicToken.balanceOf(address(this)));\r\n        \r\n        context.getAccountStorageAdapter().setFieldVerificationContractAddress(accountAddress, accountFieldName, dataIndex, address(0));\r\n    }\r\n\r\n    function getStatus() public view readStatusRestriction() returns(Status) {\r\n        return _status;\r\n    }\r\n\r\n    function getStatusName() public view readStatusRestriction() returns(string) {\r\n        if (_status == Status.None) {\r\n            return \"None\";\r\n        }\r\n        if (_status == Status.Created) {\r\n            return \"Created\";\r\n        }\r\n        if (_status == Status.Verified) {\r\n            return \"Verified\";\r\n        }\r\n        if (_status == Status.Unverified) {\r\n            return \"Unverified\";\r\n        }\r\n        if (_status == Status.Canceled) {\r\n            return \"Canceled\";\r\n        }\r\n    }\r\n\r\n    modifier readStatusRestriction() {\r\n        KimlicContractsContext context = getContext();\r\n        require(\r\n            context.getProvisioningContractFactory().createdContracts(msg.sender) || //TODO add additional check()\r\n            msg.sender == address(context.getAccountStorageAdapter()) || //TODO add additional check()\r\n            msg.sender == owner ||\r\n            msg.sender == address(context.getRewardingContract()) || //TODO add additional check()\r\n            msg.sender == context.owner());\r\n        _;\r\n    }\r\n}\r\n","abiDocs":[{"constant":true,"inputs":[],"name":"tokensUnlockAt","payable":false,"stateMutability":"view","type":"function","signature":"tokensUnlockAt()","signatureHash":"009aa2aa"},{"constant":true,"inputs":[],"name":"_status","payable":false,"stateMutability":"view","type":"function","signature":"_status()","signatureHash":"0fb3844c"},{"constant":true,"inputs":[],"name":"accountAddress","payable":false,"stateMutability":"view","type":"function","signature":"accountAddress()","signatureHash":"1e9b1312"},{"constant":false,"inputs":[{"name":"verificationResult","type":"bool"}],"name":"finalizeVerification","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"public methods ///\r","signature":"finalizeVerification(bool)","signatureHash":"21de821b"},{"constant":true,"inputs":[],"name":"getData","payable":false,"stateMutability":"view","type":"function","signature":"getData()","signatureHash":"3bc5de30"},{"constant":false,"inputs":[],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"withdraw()","signatureHash":"3ccfd60b"},{"constant":true,"inputs":[],"name":"getStatus","payable":false,"stateMutability":"view","type":"function","signature":"getStatus()","signatureHash":"4e69d560"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Allows the current owner to relinquish control of the contract.\r","signature":"renounceOwnership()","signatureHash":"715018a6"},{"constant":true,"inputs":[],"name":"verifiedAt","payable":false,"stateMutability":"view","type":"function","signature":"verifiedAt()","signatureHash":"7d56add7"},{"constant":true,"inputs":[],"name":"owner","payable":false,"stateMutability":"view","type":"function","signature":"owner()","signatureHash":"8da5cb5b"},{"constant":true,"inputs":[],"name":"getStatusName","payable":false,"stateMutability":"view","type":"function","signature":"getStatusName()","signatureHash":"95389225"},{"constant":true,"inputs":[],"name":"accountFieldName","payable":false,"stateMutability":"view","type":"function","signature":"accountFieldName()","signatureHash":"b7af4e02"},{"constant":true,"inputs":[],"name":"coOwner","payable":false,"stateMutability":"view","type":"function","signature":"coOwner()","signatureHash":"d6d34c7c"},{"constant":false,"inputs":[{"name":"newOwner","type":"address","description":"The address to transfer ownership to.\r"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Allows the current owner to transfer control of the contract to a newOwner.\r","signature":"transferOwnership(address)","signatureHash":"f2fde38b"},{"constant":true,"inputs":[],"name":"dataIndex","payable":false,"stateMutability":"view","type":"function","signature":"dataIndex()","signatureHash":"f70bd6dd"},{"constant":true,"inputs":[],"name":"rewardAmount","payable":false,"stateMutability":"view","type":"function","signature":"rewardAmount()","signatureHash":"f7b2a7be"},{"inputs":[{"name":"contextStorage","type":"address"},{"name":"reward","type":"uint256"},{"name":"account","type":"address"},{"name":"coOwnerAddress","type":"address"},{"name":"index","type":"uint256"},{"name":"fieldName","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"}],"name":"OwnershipRenounced","type":"event","signature":"OwnershipRenounced(address)","signatureHash":"f8df3114"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event","signature":"OwnershipTransferred(address,address)","signatureHash":"8be0079c"}]}
