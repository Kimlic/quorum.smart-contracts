{"author":"Bohdan Grytsenko\r","title":"Data storage layer implementation\r","fileName":"\\contracts\\BaseStorage.sol","name":"BaseStorage","abi":[{"constant":false,"inputs":[{"name":"_key","type":"bytes32"}],"name":"deleteBytes32","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"}],"name":"deleteAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32"}],"name":"getAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"}],"name":"deleteBool","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_value","type":"int256"}],"name":"setInt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_value","type":"bytes32"}],"name":"setBytes32","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_value","type":"string"}],"name":"setString","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32"}],"name":"getBool","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"}],"name":"deleteInt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32"}],"name":"getString","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32"}],"name":"getBytes32","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_value","type":"bool"}],"name":"setBool","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32"}],"name":"getUint","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_value","type":"address"}],"name":"setAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32"}],"name":"getInt","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"},{"name":"_value","type":"uint256"}],"name":"setUint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"}],"name":"deleteUint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32"}],"name":"deleteString","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"source":"pragma solidity ^0.4.23;\r\n\r\n/// @title Data storage layer implementation\r\n/// @author Bohdan Grytsenko\r\n/// @notice Core contract which implements data storage for every party using our product - User, Attestation party (AP), Relying party (RP)\r\ncontract BaseStorage {\r\n    /// internal attributes ///\r\n    mapping(bytes32 => uint256)    internal uIntStorage;\r\n    mapping(bytes32 => string)     internal stringStorage;\r\n    mapping(bytes32 => address)    internal addressStorage;\r\n    mapping(bytes32 => bytes32)    internal bytes32Storage;\r\n    mapping(bytes32 => bool)       internal boolStorage;\r\n    mapping(bytes32 => int256)     internal intStorage;\r\n\r\n    /// modifiers ///\r\n    modifier accessRestriction() {\r\n        _;\r\n    }\r\n\r\n    /**** Get Methods ***********/\r\n    \r\n    /// @notice accessor for address attribute type\r\n    /// @param _key storage key value\r\n    function getAddress(bytes32 _key) external view accessRestriction() returns (address) {\r\n        return addressStorage[_key];\r\n    }\r\n\r\n    /// @notice accessor for uint attribute type\r\n    /// @param _key storage key value\r\n    function getUint(bytes32 _key) external view accessRestriction() returns (uint) {\r\n        return uIntStorage[_key];\r\n    }\r\n\r\n    /// @notice accessor for string attribute type\r\n    /// @param _key storage key value\r\n    function getString(bytes32 _key) external view accessRestriction() returns (string) {\r\n        return stringStorage[_key];\r\n    } \r\n\r\n    /// @notice accessor for bytes32 attribute type\r\n    /// @param _key storage key value\r\n    function getBytes32(bytes32 _key) external view accessRestriction() returns (bytes32) {\r\n        return bytes32Storage[_key];\r\n    }\r\n\r\n    /// @notice accessor for bool attribute type\r\n    /// @param _key storage key value\r\n    function getBool(bytes32 _key) external view accessRestriction() returns (bool) {\r\n        return boolStorage[_key];\r\n    }\r\n\r\n    /// @notice accessor for int attribute type\r\n    /// @param _key storage key value\r\n    function getInt(bytes32 _key) external view accessRestriction() returns (int) {\r\n        return intStorage[_key];\r\n    }\r\n\r\n\r\n    /**** Set Methods ***********/\r\n\r\n\r\n    /// @notice modifier for address attribute type\r\n    /// @param _key storage key value\r\n    function setAddress(bytes32 _key, address _value) external accessRestriction() {\r\n        addressStorage[_key] = _value;\r\n    }\r\n\r\n    /// @notice modifier for uint attribute type\r\n    /// @param _key storage key value\r\n    function setUint(bytes32 _key, uint _value) external accessRestriction() {\r\n        uIntStorage[_key] = _value;\r\n    }\r\n\r\n    /// @notice modifier for string attribute type\r\n    /// @param _key storage key value\r\n    function setString(bytes32 _key, string _value) external accessRestriction() {\r\n        stringStorage[_key] = _value;\r\n    }\r\n\r\n    /// @notice modifier for bytes32 attribute type\r\n    /// @param _key storage key value\r\n    function setBytes32(bytes32 _key, bytes32 _value) external accessRestriction() {\r\n        bytes32Storage[_key] = _value;\r\n    }\r\n    \r\n    /// @notice modifier for bool attribute type\r\n    /// @param _key storage key value\r\n    function setBool(bytes32 _key, bool _value) external accessRestriction() {\r\n        boolStorage[_key] = _value;\r\n    }\r\n    \r\n    /// @notice modifier for int attribute type\r\n    /// @param _key storage key value\r\n    function setInt(bytes32 _key, int _value) external accessRestriction() {\r\n        intStorage[_key] = _value;\r\n    }\r\n\r\n\r\n    /**** Delete Methods ***********/\r\n    \r\n    /// @notice removal of address attribute type\r\n    /// @param _key storage key value\r\n    function deleteAddress(bytes32 _key) external accessRestriction() {\r\n        delete addressStorage[_key];\r\n    }\r\n\r\n    /// @notice removal of bytes32 attribute type\r\n    /// @param _key storage key value\r\n    function deleteUint(bytes32 _key) external accessRestriction() {\r\n        delete uIntStorage[_key];\r\n    }\r\n\r\n    /// @notice removal of string attribute type\r\n    /// @param _key storage key value\r\n    function deleteString(bytes32 _key) external accessRestriction() {\r\n        delete stringStorage[_key];\r\n    }\r\n\r\n    /// @notice removal of bytes32 attribute type\r\n    /// @param _key storage key value\r\n    function deleteBytes32(bytes32 _key) external accessRestriction() {\r\n        delete bytes32Storage[_key];\r\n    }\r\n    \r\n    /// @notice removal of bool attribute type\r\n    /// @param _key storage key value\r\n    function deleteBool(bytes32 _key) external accessRestriction() {\r\n        delete boolStorage[_key];\r\n    }\r\n    \r\n    /// @notice removal of int attribute type\r\n    /// @param _key storage key value\r\n    function deleteInt(bytes32 _key) external accessRestriction() {\r\n        delete intStorage[_key];\r\n    }\r\n\r\n}","abiDocs":[{"constant":false,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"}],"name":"deleteBytes32","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"removal of bytes32 attribute type\r","signature":"deleteBytes32(bytes32)","signatureHash":"0b9adc57"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"}],"name":"deleteAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"removal of address attribute type\r","signature":"deleteAddress(bytes32)","signatureHash":"0e14a376"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"}],"name":"getAddress","payable":false,"stateMutability":"view","type":"function","notice":"accessor for address attribute type\r","signature":"getAddress(bytes32)","signatureHash":"21f8a721"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"}],"name":"deleteBool","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"removal of bool attribute type\r","signature":"deleteBool(bytes32)","signatureHash":"2c62ff2d"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"},{"name":"_value","type":"int256"}],"name":"setInt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for int attribute type\r","signature":"setInt(bytes32,int256)","signatureHash":"3e49bed0"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"},{"name":"_value","type":"bytes32"}],"name":"setBytes32","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for bytes32 attribute type\r","signature":"setBytes32(bytes32,bytes32)","signatureHash":"4e91db08"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"},{"name":"_value","type":"string"}],"name":"setString","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for string attribute type\r","signature":"setString(bytes32,string)","signatureHash":"6e899550"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"}],"name":"getBool","payable":false,"stateMutability":"view","type":"function","notice":"accessor for bool attribute type\r","signature":"getBool(bytes32)","signatureHash":"7ae1cfca"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"}],"name":"deleteInt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"removal of int attribute type\r","signature":"deleteInt(bytes32)","signatureHash":"8c160095"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"}],"name":"getString","payable":false,"stateMutability":"view","type":"function","notice":"accessor for string attribute type\r","signature":"getString(bytes32)","signatureHash":"986e791a"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"}],"name":"getBytes32","payable":false,"stateMutability":"view","type":"function","notice":"accessor for bytes32 attribute type\r","signature":"getBytes32(bytes32)","signatureHash":"a6ed563e"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"},{"name":"_value","type":"bool"}],"name":"setBool","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for bool attribute type\r","signature":"setBool(bytes32,bool)","signatureHash":"abfdcced"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"}],"name":"getUint","payable":false,"stateMutability":"view","type":"function","notice":"accessor for uint attribute type\r","signature":"getUint(bytes32)","signatureHash":"bd02d0f5"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"},{"name":"_value","type":"address"}],"name":"setAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for address attribute type\r","signature":"setAddress(bytes32,address)","signatureHash":"ca446dd9"},{"constant":true,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"}],"name":"getInt","payable":false,"stateMutability":"view","type":"function","notice":"accessor for int attribute type\r","signature":"getInt(bytes32)","signatureHash":"dc97d962"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"},{"name":"_value","type":"uint256"}],"name":"setUint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"modifier for uint attribute type\r","signature":"setUint(bytes32,uint256)","signatureHash":"e2a4853a"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"}],"name":"deleteUint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"removal of bytes32 attribute type\r","signature":"deleteUint(bytes32)","signatureHash":"e2b202bf"},{"constant":false,"inputs":[{"name":"_key","type":"bytes32","description":"storage key value\r"}],"name":"deleteString","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"removal of string attribute type\r","signature":"deleteString(bytes32)","signatureHash":"f6bb3cc4"}]}
